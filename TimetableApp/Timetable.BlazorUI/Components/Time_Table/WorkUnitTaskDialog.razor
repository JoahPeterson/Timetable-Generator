<MudDialog Class="p-4">
    <TitleContent>
        <MudText Typo="Typo.h6">
            <MudIcon Icon="@Icons.Material.Filled.Task" Class="mr-3 mb-n1" />
            Add Work Task Data
        </MudText>
    </TitleContent>

    <DialogContent>
        <EditForm Model="@workUnitTask" OnValidSubmit="SaveWorkUnitTask">
            <MudCard>
                <MudCardContent Class="mb-1">
                    <DataAnnotationsValidator />

                    <MudNumericField @bind-Value="workUnitTask.Duration" Label="Time Requirement (MIN)"
                                     Placeholder="Enter duration in minutes"
                                     Required="true" For="@(() => workUnitTask.Duration)" />
                    <ValidationMessage For="@(() => workUnitTask.Duration)" />

                    <MudDatePicker @bind-Date="workUnitTask.DueDate" Label="Due Date" MinDate="@minDate"
                                   MaxDate="@maxDate"
                                   Required="true" />
                    <ValidationMessage For="@(() => workUnitTask.DueDate)" />
                </MudCardContent>
                <MudCardActions>
                    <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Class="ml-auto mstc-gold-btn">Register</MudButton>
                </MudCardActions>
            </MudCard>
        </EditForm>
    </DialogContent>
</MudDialog>

@code {
    [CascadingParameter] 
    MudDialogInstance MudDialog { get; set; }

    [Parameter] 
    public WorkUnitTask workUnitTask { get; set; }

    private DateTime minDate = DateTime.Now;

    private DateTime maxDate = DateTime.Now.AddDays(5);

    private void OnValidSubmit(EditContext context)
    {
        
        StateHasChanged();
    }

    private void SaveWorkUnitTask()
    {
        MudDialog.Close(DialogResult.Ok(workUnitTask));
    }

    private void Cancel()
    {
        MudDialog.Close();
    }
}
