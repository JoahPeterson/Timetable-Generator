@page "/dashboard"
@using Timetable.BlazorUI.Components.Components
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Components.Web
@inject IJSRuntime JS
@rendermode @(new InteractiveServerRenderMode(prerender:false))

<div class="container">
    <div class="row justify-content-center">
        <div class="col-lg-6 col-sm-12 mb-sm-3 mb-2 col-md-12">

            <CoursesDiv @ref="CourseDivObject" OnShow="ShowModal" />
        </div>
        <div class="col-lg-5 col-sm-12 col-md-12 mb-2">

            <TaskTypesDiv @ref="TaskTypeDivObject" OnShow="ShowModal"/>
        </div>
    </div>
</div>

<AuthorizeView Roles="Admin">
<div class="container">
    <div class="row justify-content-center">
        <div class="col-lg-4 col-sm-12 mb-sm-3 mb-2 col-md-12">
            <CourseTypesDiv @ref="CourseTypeDivObject" OnShow="ShowModal"/>
        </div>
        <div class="col-lg-4 col-sm-12 mb-sm-3 mb-2 col-md-12">
            <!--Users Div-->
        </div>
        <div class="col-lg-4 col-sm-12 mb-sm-3 mb-2 col-md-12">
            <!--Terms Div-->
        </div>

    </div>
</div>
</AuthorizeView>

<ConfirmDialog OnClose="OnClose" />

@code{
    private object? selectedItem; 
    private CoursesDiv CourseDivObject;
    private TaskTypesDiv TaskTypeDivObject;
    private CourseTypesDiv CourseTypeDivObject;

    private async Task OnClose()
    {
        if (selectedItem is Course course)
        {
            await CourseDivObject.Archive(); 
        }
        else if (selectedItem is TaskType taskType)
        {
            await TaskTypeDivObject.Archive(taskType);
        }
        else if (selectedItem is CourseType courseType)
        {
            await CourseTypeDivObject.Archive();
        }

    }

    private async Task ShowModal(object item)
    {
        selectedItem = item;
        await JS.InvokeVoidAsync("modalInterop.showModal", "modal-1");
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JS.InvokeVoidAsync("initializeModal");
        }
    }

}

